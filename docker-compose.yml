services:
  dbpostgres:
    image: postgres:latest
    container_name: dbpostgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: foodarch
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d foodarch"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - foodarch
    volumes:
      - db_data:/var/lib/postgresql/data

  app:
    container_name: foodarch
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:8080"
    environment:
      DATASOURCE_URL: jdbc:postgresql://dbpostgres:5432/foodarch
      DATASOURCE_USERNAME: postgres
      DATASOURCE_PASSWORD: postgres
      SERVER_PORT: 8080
    depends_on:
      dbpostgres:
        condition: service_healthy
    networks:
      - foodarch

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - 80:80
    depends_on:
      app:
        condition: service_started
    networks:
      - foodarch
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d

networks:
  foodarch:
    driver: bridge

volumes:
  db_data:
